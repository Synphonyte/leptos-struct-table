use crate::ColumnSort;
use std::collections::VecDeque;

/// This implements the possibility to sort the data. It is automatically derived for
/// the type that uses [TableComponent] and usually is not required to be implemented by the user.
pub trait TableDataSorting {
    /// This is generated by deriving TableComponent. It's an enum with all the column names.
    type ColumnName: Copy;

    #[allow(unused_variables)]
    /// Set the sorting of the table. The sorting is a list of column names and the sort order sorted by priority.
    /// The first entry in the list is the most important one.
    /// The default implementation does nothing.
    /// For example: `[(Column::Name, ColumnSort::Ascending), (Column::Age, ColumnSort::Descending)]`
    /// will sort by name first and then by age.
    /// Please note that after calling this method, data will be reloaded through [`get_rows`](TableDataProvider::get_rows).
    fn set_sorting(&mut self, sorting: &VecDeque<(Self::ColumnName, ColumnSort)>) {
        // by default do nothing
    }
}
